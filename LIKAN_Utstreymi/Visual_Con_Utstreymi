import datetime as dt
import matplotlib.pyplot as plt
import numpy as np
import collections
import matplotlib.colors

import psycopg2
from Functions.Select_function import Select_string
# ------------------------------------------------
# HARDCODE
# ------------------------------------------------

dagar = 5
timeslott = 8

# ------------------------------------------------
# Connection to SQL
# ------------------------------------------------
host = 'localhost'
dbname = 'atvr2'
username = 'postgres'
pw = 'postgres'

conn_string = "host='{}' dbname='{}' user='{}' password='{}'"

try:
    conn = psycopg2.connect(conn_string.format(host, dbname, username, pw))
except psycopg2.OperationalError as e:
    print('Connection failed')
    print('Error: ', e)
    exit()
cursor = conn.cursor()

# ------------------------------------------------
# Load solution data and demo_data
# ------------------------------------------------
results = []
with open('solution.sol') as inputfile:
    for line in inputfile:
        results.append(line.strip().replace(')', ' ').replace('(', ' ').replace(',', ' ').split())

data = []
alag = {}
target = {}
with open('demo_data_real.txt') as inputfile:
    for line in inputfile:
        data.append(line)

# -------------------------------------------------------------------------------------------
# FIX FOR HARDCODE
# ------------------------------------------------
# Find places to start and end for alag
# ------------------------------------------------
alag_start = 0
for line in data:
    alag_start = alag_start + 1
    if line.strip() == 'param A :=':
        break

alag_end = alag_start
for line in data[alag_start:]:
    if line.strip() == ';':
        break
    alag_end = alag_end + 1

# ------------------
# Create alag
# ------------------   ALAG ER HUGSAâ€“ VITLAUST SKOâ€“A A MRG
for i in data[alag_start:alag_end]:
    i.strip()
    key = i[0:i.find(' ')]
    alag[int(key)] = [float(i[i.find(' '):])]

# ------------------------------------------------
# Find places to start and end for target
# ------------------------------------------------
target_start = 0
for line in data:
    target_start = target_start + 1
    if line.strip() == 'param Ttarget :=':
        break

target_end = target_start
for line in data[target_start:]:
    if line.strip() == ';':
        break
    target_end = target_end + 1

# ------------------
# Create target
# -------------------
for i in data[target_start:target_end]:
    key = i[0] + i[2]
    print(i[0],'--',i[1],'---',i[2],'--',i[4:7])
    target[int(key)] = [int(i[i.find(' ', 2):].strip())]

# -------------------------------------------------------------------------------------------

selectstring = Select_string(1)  # call to SQL data base
cursor.execute(selectstring)
arr = cursor.fetchall()

#SELECT fyrir utstreymi
selectstring_uts = "Select u.Ship_Code,u.Destination, sum(u.Quantity*c.Timevalue*1.5), u.date, count(u.Total_Qty) from Utstreymi u, Item_Category c, Item i where u.ItemNo = i.id and i.tegund = c.name and u.date in('12/02/2018','13/02/2018','14/02/2018','15/02/2018','16/02/2018') group by u.Ship_Code , u.date, u.Destination order by u.Ship_Code "
cursor.execute(selectstring_uts)
arr_uts = cursor.fetchall()



select_data_inn = {}
count = 0
for x in arr:
    select_data_inn[count] = [x[0], x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8]]
    count = count + 1

select_data_uts = {}
count = 0
for x in arr_uts:
    select_data_uts[count] = [x[0], x[1], x[2], x[3], x[4]]
    count = count + 1

print(select_data_inn)
print('--\n\n')
print(select_data_uts)







A = []

for i in range(0,8):
		A.append([0.2,0.2,0.2,0.2,0.2])

'''
A = []

counter = 0;
for timi in range(0,8):
  for dagur in range(0,5):
    counter = counter + 1
    if(testAlag[counter-1][:1] > testTargets2[timi][dagur]): 
      toA.append(0.1) 
    elif(abs(testAlag[counter-1][:1] - testTargets2[timi][dagur]) < 100):
      toA.append(0.3)
    else:
      toA.append(0.2)

  A.append(toA)
  toA = []
'''


# -----------------------------------------------------------------
# PLOT
# -----------------------------------------------------------------
plt.subplots(1, 1, figsize=(12, 6))
cmap = matplotlib.colors.ListedColormap([ 'green','red', 'orange'])
plt.pcolor(A, edgecolors='k', linewidths=3, cmap=cmap)
#first_date = select_data[0][2]
#last_date = select_data[len(select_data)-1][2]
#plt.title('Stundatafla ' + first_date + ' - ' + last_date)
plt.ylabel('Time')
plt.xlabel('Date')

plt.xticks(np.arange(dagar), ['M', 'T', 'W', 'T', 'F', 'S', 'S'])
plt.yticks(np.arange(timeslott + 1), ['8:00', '9:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00'])



plt.show()








